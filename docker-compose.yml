version: "3"

services:
  django:
    container_name: django19001-v2
    build:
      context: .
      dockerfile: django.Dockerfile
    depends_on:
      - postgres_db
    volumes:
      - ./avarus/:/avarus/
      - ./inf.py:/avarus/inf.py
    restart: unless-stopped
    ports:
      - 8000:8000
    networks:
      - app-tier
    env_file:
      - .env

  postgres_db:
    image: postgres:16.3-alpine3.20
    container_name: postgres19001-v2
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - app-tier
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  nginx:
    image: nginx:stable-alpine3.19-perl
    container_name: nginx19001-v2
    hostname: nginx19001-v2
    ports:
      - 80:80 
      - 443:443
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    profiles: [prod]

  certbot:
    image: certbot/certbot:v2.11.0
    container_name: certbot19001-v2
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    profiles: [prod]

networks:
  app-tier:
    driver: bridge
