# Generated by Django 5.0.4 on 2024-05-07 10:40

import apps.datasets.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authors', '0001_initial'),
        ('publications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(blank=True, help_text='A brief description of the dataset.')),
                ('env', models.FileField(upload_to='datasets/env/', validators=[apps.datasets.validators.env_validator])),
                ('spp', models.FileField(blank=True, upload_to='datasets/spp/')),
                ('image', models.ImageField(blank=True, upload_to='datasets/img/')),
                ('download_url', models.URLField(blank=True, verbose_name='Download link')),
                ('status', models.CharField(blank=True, choices=[('pu', 'Public'), ('pr', 'Private')], default='pr', help_text='Availability.', max_length=5)),
                ('permafrost_type', models.CharField(blank=True, max_length=200)),
                ('permafrost_data', models.CharField(blank=True, max_length=200)),
                ('additional_data', models.TextField(blank=True, help_text='Any additional info related to dataset.')),
                ('year', models.CharField(blank=True, help_text='Year of creation', max_length=200)),
                ('n_plots', models.CharField(blank=True, help_text='Number of plots', max_length=200)),
                ('coverscale', models.CharField(blank=True, max_length=200)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('geotagged', models.CharField(blank=True, max_length=200)),
                ('region', models.CharField(blank=True, max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('subzone', models.CharField(blank=True, max_length=200)),
                ('mosses', models.CharField(blank=True, max_length=200)),
                ('liverworts', models.CharField(blank=True, max_length=200)),
                ('liches', models.CharField(blank=True, max_length=200)),
                ('vascular', models.CharField(blank=True, max_length=200)),
                ('cryptogam', models.CharField(blank=True, max_length=200)),
                ('disturban', models.JSONField(blank=True, default=dict)),
                ('position', models.JSONField(blank=True, default=dict)),
                ('soil_text', models.JSONField(blank=True, default=dict)),
                ('ecotope', models.JSONField(blank=True, default=dict)),
                ('phytocoenosis', models.JSONField(blank=True, default=dict)),
                ('phytocoenosis_cover', models.JSONField(blank=True, default=dict)),
                ('authors', models.ManyToManyField(blank=True, related_name='datasets', to='authors.author')),
                ('available_to', models.ManyToManyField(blank=True, related_name='available_datasets', to=settings.AUTH_USER_MODEL)),
                ('publications', models.ManyToManyField(blank=True, related_name='datasets', to='publications.publication')),
            ],
            options={
                'verbose_name': 'Dataset',
            },
        ),
        migrations.CreateModel(
            name='DatasetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('organization', models.CharField(max_length=120, null=True, verbose_name='Organization')),
                ('position', models.CharField(max_length=120, null=True, verbose_name='Position')),
                ('email', models.EmailField(blank=True, max_length=120, null=True, verbose_name='Email')),
                ('purpose', models.TextField(null=True, verbose_name='Purpose')),
                ('status', models.CharField(blank=True, choices=[('g', 'Granted'), ('r', 'In review'), ('d', 'Denied')], default='r', max_length=1)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='datasets.dataset')),
                ('user', models.ForeignKey(help_text='User that requested access', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dataset access request',
            },
        ),
    ]
